

//错误处理机制
一。
//控制器类源码
 @Autowired
        HelloService helloService;

        @RequestMapping("/hello")
        @ResponseBody
        public String helloConsumer(){
            return helloService.helloService();
        }
 //原服务类
@HystrixCommand(fallbackMethod="helloFallback")
    public String helloService(){
        return restTemplate.getForEntity("http://eureka-provider",String.class).getBody();
    }

    public String helloFallback(){
        return "error";
    }


  二。//直接写在控制器中

        @RequestMapping("/index")
        @HystrixCommand(fallbackMethod="helloFallback")     //指定fallbackMethod
        public String index(){
            String results=restTemplate.getForObject("http://eureka-provider/getName",String.class);
            return results;
        }

        public String helloFallback(){        //fallback
            return "error";
        }


Hystrix要素概述:      （1）引入spring-cloud-starter-hystrix依赖
                       （2）@EnableCircuitBreaker注解 //开启断路器功能
                       （4）fallbackmethod   //添加熔断返回方法
                       （3）@HystrixCommand(fallbackMethod="helloFallback")     //指定fallbackMethod